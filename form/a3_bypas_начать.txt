; ГРС Красноусольск (Стерлитамакское ЛПУМГ)
; Галеев 09.2019
; Переход на байпасную линию

; v2  -  Добавлены диагностические параметры для контроля выполнения алгоритма
; dout[1] - команда перехода на бп
; dout[2] - ход выполнения 0-нет , 1-выполняется
; dout[3] - причина сработки
; aout[4] - код ошибки выполнения
; aout[5] - дата последнего выполнения
; aout[6] - дата возврата


#include "eval.lib\set.evl"
#include "eval.lib\setq.evl"
#include "eval.lib\valTrack.evl"


;---------------------  Условия перехода на байпасную линию: ------------------------------------
;	+  по команде с ПУ ДП или АРМ ГРС;
;	+  по сигналу <Давление газа на выходе ГРС низкое> (-10%);
;	+  по сигналу <Давление газа на выходе ГРС высокое> (+11%);
;	+  по сигналу <Пожар в блоке редуцирования>.
;	-  по сигналу <Пожар в расходомерной>.
;	-  по сигналу <Пожар в топочной>.
;	-  по сигналу <Перепад давления на счетчике газа высокий> (задается уставкой). (Данный сигнал используется, если счетчик газа расположен на входе ГРС. По сигналу "Перепад давления на счетчике газа повышенный" (уставка) - аварийная сигнализация на АРМ ГРС и ПУ ДП.). 
;	-  при одновременном срабатывании сигналов <Некорректированный объем газа высокий> и <Сработал ППК>.
;---------------------------------------------------------

func checkFire(dummy)
  x=0
  x=x|{ПОЖАР РЕД КРАС} ;<Пожар в блоке редуцирования>.
  return(x)
endfunc

;
func checkPrecond(dummy) ; причина перехода 0 - нет причин
  x=0
  if(ne({РЕЖИМ ГРС КРАС},0)&eq({ХОД АО КРАС},0))
    x = x + 1*{РВЫХ123 Н КРАС} ;<Давление газа на выходе ГРС низкое> (-10%)
    x = x + 2*{РВЫХ123 В КРАС} ;<Давление газа на выходе ГРС высокое> (+11%);
    x = x + 3*checkFire(0)     ; зафиксирован пожар 
    x = x + 4*{КОМ БАЙП КРАС}  ; по команде с ПУ ДП или АРМ ГРС;
  endif
  return(x)
endfunc

;------------------------------------------------------------------------------------------------------
;---------
; стадия 1 открытие крана БП
;---------
func stage1(s)

  reason=checkPrecond(0)
  if(eq(reason,0)|ne(s,0))
    return(s)
  endif
  
  dout[2]=1         ; run
  dout[3]=reason    ;(причина)
  aout[4]=0         ;сброс ошибки

  ; кран на байпасной линии открыть
  x=setwex({КРАН БАЙП КРАС}[sys_num],0,30)

  ; первый этап выполнен, если кран на байпасе не закрыт
  return(ne({КРАН БАЙП КРАС},2))
endfunc

;----------
; стадия 2 - перенастройка оборудования
;----------
func stage2(s)
  if(ne(s,1))
    return(s)
  endif
  
  aout[5]=time() ;дата выполнения

  ; контур рег установить на ЭР04
  x=setex({КОНТР РЕГ КРАС}[sys_num],0)
  x=setex({РЕЖ РЕГ04 КРАС}[sys_num],1)

  ; подогреватель отключить
  x=setex({ПГ УПР КРАС}[sys_num],2) 	

    ; для одоризации средний расход прошлых суток
  x=setq24({QАВТ БОМ КРАС}[sys_num],{1SF ПРСУТ КРАС},0)

  return(2)
endfunc

;---------
; стадия 3 закрытие кранов
;---------
func stage3(s)
  if(ne(s,2))
    return(s)
  endif

  if (eq({РЕЖИМ ГРС КРАС},0)|eq({ХОД АО КРАС},1)|eq({КРАН БАЙП КРАС},2))                 
    return(s)
  endif

  ; при Рвых низ без пожара ждем его повышения
  if(eq({РВЫХ123 Н КРАС},1)&!checkFire(0))
    return(s) 
  endif
  ; входной кран закрыть
  x=setwex({КРАН ВХОД КРАС}[sys_num],1,15)	

  if(checkFire(0))
    ; выходной кран закрыть
    x=setwex({КРАН ВЫХ КРАС}[sys_num],1,15)

    if(eq({КРАН ВХОД КРАС},2)&eq({КРАН ВЫХ КРАС},2))
      ; открыть свечные краны
      x=setwex({КР СВ НИЗ КРАС}[sys_num],0,15)
    endif
  else 
    ; если краны редуц достоверны(обвязаны) закрыть их
    if (dost({КР ЛРЕД1 КРАС})&dost({КР ЛРЕД2 КРАС}))
      x=setwex({КР ЛРЕД1 КРАС}[sys_num],1,15)
      x=setwex({КР ЛРЕД2 КРАС}[sys_num],1,15)
    else ;иначе выходной
      x=setwex({КРАН ВЫХ КРАС}[sys_num],1,15)
    endif
  endif

  sleep(18*30) ; ожидание отработки алгоритма слежения за кранами
  aout[4]=ne({КОД ОШКР КРАС},0)  ;проблемы с кранами
  ;aout[4]=aout[4]+2*ne({ПГ РЕЖ КРАС},0)  ;подогреватель не выключился

  ; восстановление команды перех на бп (возможно, это причина)
  dout[1]=0 

  return(3)
endfunc


func oninit(t)
  stage=0                   ; стадия
  dout[1]=0				    ; ком перехода на бп
  dout[2]=0
  dout[3]=0
  aout[4]=0
  aout[5]=true({ДАТА БП КРАС})
  aout[6]=true({ДАТА ЗБП КРАС})

  sleep(10*18)				; ждем первого опроса модулей
  prevpos={КРАН БАЙП КРАС}  ; байп кран
endfunc

stage=stage1(stage)
stage=stage2(stage)
stage=stage3(stage)



krbp={КРАН БАЙП КРАС}
if(ne(krbp,prevpos)&eq(krbp,2))
  stage=0
  dout[2]=0 ; выполнен
  dout[3]=0 ; 
  aout[6]=time() ;дата завершения
  x=setex({РЕЖ РЕГ04 КРАС}[sys_num],0) 	; отключить рег эр-04 
endif
prevpos=krbp

