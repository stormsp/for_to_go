package main

import (
	PKG "AlgorithmsRabbit/connections"
	"sync"
	"time"
	"fmt"
)

var aout [100]float32
var dout [100]float32
var x int

type SafeMap struct {
	Mu   sync.Mutex
	Reps map[string]*Rep
}

type Rep struct {
	MEK_Address int
	Raper       string
	Value       float32
	TypeParam   string
	OldValue    float32
	Reliability bool
	TimeOld     time.Time
	Time        time.Time
}

type OutToRabbitMQ struct {
	MEK_Address int
	Raper       string
	Value       float32
	TypeParam   string
	Reliability bool
	Time        time.Time
}

func main() {
	PKG.CONNECTRABBITMIB = "amqp://admin:admin@192.168.1.102:5672/"
	PKG.NameAlg = "ButtonALG"
	//–û–±—ä—è–≤–ª–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω—ã—Ö –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤
	PKG.DeclareArrays()
	//–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ RabbitMQ
	PKG.DeclareRabbit()
	//–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
	go PKG.ConsumeFromRabbitMq(&PKG.InputMap)
	go PKG.SendToRabbitMQ(&PKG.OutputMap)
	for {
		//–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º
		if PKG.ConnectToRabit {
			for {
				mainOutput()
				time.Sleep(200 * time.Millisecond)
			}
		}
		time.Sleep(100 * time.Millisecond)
	}
}
// –ì–†–° –ö—Ä–∞—Å–Ω–æ—É—Å–æ–ª—å—Å–∫ (–°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫—Å–∫–æ–µ –õ–ü–£–ú–ì)
// 09.2019 –ì–∞–ª–µ–µ–≤
// –ê–≤–∞—Ä–∏–π–Ω—ã–π –æ—Å—Ç–∞–Ω–æ–≤

// v2  -  –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞
// dout[1] - –∫–æ–º–∞–Ω–¥–∞ –ê–û
// dout[2] - —Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 0-–Ω–µ—Ç , 1-–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
// dout[3] - –ø—Ä–∏—á–∏–Ω–∞ —Å—Ä–∞–±–æ—Ç–∫–∏
// aout[4] - –∫–æ–¥ –æ—à–∏–±–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
// aout[5] - –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
// aout[6] - –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è


//#include "eval.lib\valtrack.evl"
//#include "eval.lib\set.evl"
//#include "eval.libront.evl"


//----------- –£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ –æ—Å—Ç–∞–Ω–æ–≤–∞ -----------------------------
// –ø–æ –∫–æ–º–∞–Ω–¥–µ —Å —ç–∫—Ä–∞–Ω–∞ –ê–†–ú –∏–ª–∏ –æ—Ç –î–∏—Å–ø–µ—Ç—á–µ—Ä–∞
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–æ–π –±–æ–ª–µ–µ 4 —Å–µ–∫—É–Ω–¥ –∫–Ω–æ–ø–∫–µ(–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π)- —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏:
// - –ê–≤–∞—Ä–∏–π–Ω–æ-–≤—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ
// - –ü–æ–∂–∞—Ä –≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–Ω–æ–π
// - –ü–æ–∂–∞—Ä –≤ –±–ª–æ–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–∂.—Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏)
// - –ü–æ–∂–∞—Ä –≤ –±–ª–æ–∫–µ –æ–¥–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–∂.—Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏)
//-------------------------------------------------------------------------------
func checkFire() float32 {
	var x float32
	x = 0
	x=x + val("–ü–û–ñ–ê–† –û–ü–ï –ö–†–ê–°") //<–ü–æ–∂–∞—Ä –≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–Ω–æ–π>.
	x=x + val("–ü–û–ñ–ê–† –ü–ï–† –ö–†–ê–°") //<–ü–æ–∂–∞—Ä –≤ –±–ª–æ–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è>.
	//x=x || val("–ü–û–ñ–ê–† –û–î–û –ö–†–ê–°") //<–ü–æ–∂–∞—Ä –≤ –±–ª–æ–∫–µ –æ–¥–æ—Ä–∏–∑–∞—Ü–∏–∏>.
	return(x)
}


func checkPrecond() float32 {
	var x float32
	x = 0
	if (val("–†–ï–ñ–ò–ú –ì–†–° –ö–†–ê–°")) != (0) {
		x=x+val("–ö–û–ú –ê–û –ö–†–ê–°")  //1 –∫–æ–º–∞–Ω–¥–∞ - –±–µ–∑ —É—Å–ª–æ–≤–∏–π
		if ((valTrack(val("–ö–ù –ê–í–û–°–¢ –ö–†–ê–°"),4,8)) == 1) {    // –∫–Ω–æ–ø–∫–∞ - —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ {
			x=x + checkFire()        //2 –ü–æ–∂–∞—Ä
			x=x+3*val("–†–í–´–•123–ê–í –ö–†–ê–°")    //3 –ê–≤–∞—Ä–∏–π–Ω–æ-–≤—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ
		}
	}
	return(x)
}
//--------------------------------------------------------------------------------

func oninit(t any) any {
	dout[1]=0
	dout[2]=0
	dout[3]=0
	aout[4]=0
	//aout[5]=TRUE(val("–î–ê–¢–ê –ê–û –ö–†–ê–°"))
	aout[5]=1
	//aout[6]=TRUE(val("–î–ê–¢–ê –ó–ê–û –ö–†–ê–°"))
	aout[6]=1

	// –∂–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –º–æ–¥—É–ª–µ–π
	time.Sleep((10) * time.Second)
	return nil
}

func mainOutput() {
	x += 1
	reason:=checkPrecond()
	if x % 5 == 0 {
		PKG.UpdateVal("–ö–û–ú –†–ï–ñ3", 0, true)
		fmt.Println("–∞–ø–¥–µ–π—Ç–Ω—É–ª")
	}
	if (reason) != (0) {
		fmt.Print("–ø–æ–ø–∞–ª")

		dout[2]=1	// —Ö–æ–¥ –∞–æ
		dout[3]=(reason)
		aout[5]=float32(time.Now().Unix())

		// –∑–∞–∫—Ä—ã—Ç—å –æ—Ö—Ä–∞–Ω–Ω—ã–π –∫—Ä–∞–Ω
		setwex("–ö–†–ê–ù –û–•–† –ö–†–ê–°",1,40)

		time.Sleep((1) * time.Second)
		if val("–ö–†–ê–ù –û–•–† –ö–†–ê–°") != (2) {
			// –∑–∞–∫—Ä—ã—Ç—å –≤—Ö–æ–¥–Ω–æ–π –∫—Ä–∞–Ω
			setwex("–ö–†–ê–ù –í–•–û–î –ö–†–ê–°",1,20)
		}

		// –∑–∞–∫—Ä—ã—Ç—å –±–∞–π–ø–∞—Å–Ω—ã–π –∫—Ä–∞–Ω
		setwex("–ö–†–ê–ù –ë–ê–ô–ü –ö–†–ê–°",1,20)

		// –∑–∞–∫—Ä—ã—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π
		setwex("–ö–†–ê–ù –í–´–• –ö–†–ê–°",1,20)

		// –ø–æ–¥–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏—Ç—å
		set_wait("–ü–ì –£–ü–† –ö–†–ê–°",2,20)

		// –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–¥–æ—Ä–∏–∑–∞—Ç–æ—Ä
		set_wait("–†–ï–ñ –û–î–û–†1 –ö–†–ê–°",0,20)

		// –ï—Å–ª–∏ –ø–æ–∂–∞—Ä
		if checkFire() > 0{

			// –µ—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç—ã : –û—Ö—Ä–∞–Ω–Ω—ã–π, –±–∞–π–ø–∞—Å–Ω—ã–π, –≤—ã—Ö–æ–¥–Ω–æ–π –∫—Ä–∞–Ω—ã
			if ((val("–ö–†–ê–ù –û–•–† –ö–†–ê–°")) == (2)) && ((val("–ö–†–ê–ù –í–´–• –ö–†–ê–°")) == (2)) && ((val("–ö–†–ê–ù –ë–ê–ô–ü –ö–†–ê–°")) == (2)) {
				// –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–µ—á–Ω—ã–µ –∫—Ä–∞–Ω—ã
				setwex("–ö–† –°–í –ù–ò–ó –ö–†–ê–°",0,30)
				setwex("–ö–† –°–í –í–´–° –ö–†–ê–°",0,30)
			}

			// –µ—Å–ª–∏ –æ—Ö—Ä–∞–Ω–Ω—ã–π –∫—Ä–∞–Ω –Ω–µ –∑–∞–∫—Ä—ã—Ç, –∞ –∑–∞–∫—Ä—ã—Ç—ã: –≤—Ö–æ–¥–Ω–æ–π, –±–∞–π–ø–∞—Å–Ω—ã–π, –≤—ã—Ö–æ–¥–Ω–æ–π –∫—Ä–∞–Ω—ã
			if (((val("–ö–†–ê–ù –û–•–† –ö–†–ê–°")) != (2)) && ((val("–ö–†–ê–ù –í–•–û–î –ö–†–ê–°")) == (2))) && ((val("–ö–†–ê–ù –í–´–• –ö–†–ê–°")) == (2)) {
				// –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–µ—á–Ω–æ–π –∫—Ä–∞–Ω —Å –Ω–∏–∑ —Å—Ç–æ—Ä–æ–Ω—ã
				setwex("–ö–† –°–í –ù–ò–ó –ö–†–ê–°",0,30)
			}
		}

		// –ø–µ—Ä–µ–≤–æ–¥–∏–º –≥—Ä—Å –≤ —Ä–µ–∂–∏–º –ø–æ –º–µ—Å—Ç—É
		PKG.UpdateVal("–ö–û–ú –†–ï–ñ3", 0, true)
		//fmt.Print("–∞–ø–¥–µ–π—Ç –ö–û–ú –†–ï–ñ3")
		time.Sleep((5) * time.Second)
		dout[1]=0	// –∫–æ–º –∞–æ (–≤–æ–∑–º –ø—Ä–∏—á–∏–Ω–∞)
		dout[2]=0

		aout[6]=float32(time.Now().Unix())
	}
	
	if front("–†–ï–ñ–ò–ú –ì–†–° –ö–†–ê–°",0)!=9 {
		dout[3]=0
	}
	fmt.Println("–∫–æ–Ω–µ—Ü –º–µ–π–Ω")

}