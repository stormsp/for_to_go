; ГРС Затон КЛПУ
; Хроматограф
; Хажиахметов В  2014.09.12
; dout[1-20] - ошибки анализа и калибровки 
; dout[21] - кнопка ручного запроса 
; aout[30-69] - запрошенные параметры

;                          ---------****--------
; при ПНР выставить час окончания калибровки и анализа
; в паспорт {ЧАС КАЛ НАЛ} {ЧАС АНАЛ НАЛ} c учетом времени в КП(местн или московск)
;                          ----------***-------

; Расшифровка ошибок хроматографа
; 16 dout 
func hr_o(a,cod)
  dout[a+0]=ne(cod & 1, 0)	; Температура колонки вышла за максимальную границу
  dout[a+1]=ne(cod & 2, 0)	; Температура колонки вышла за минимальную границу
  dout[a+2]=ne(cod & 4, 0)	; Авария по давлению: меньше 4.0 атм
  dout[a+3]=ne(cod & 8, 0)	; Резерв
  dout[a+4]=ne(cod & 16, 0)	; Авария по давлению: меньше 1.7 атм
  dout[a+5]=ne(cod & 32, 0)	; Резерв
  dout[a+6]=ne(cod & 64, 0)	; Температура нити детектора вышла за максимальную границу
  dout[a+7]=ne(cod & 128, 0)	; Температура нити детектора вышла за минимальную границу
  dout[a+8]=ne(cod & 256, 0)	; Ток нити детектора вышел за максимальную границу
  dout[a+9]=ne(cod & 512, 0)	; Ток нити детектора вышел за минимальную границу
  dout[a+10]=ne(cod & 1024, 0)	; Во время анализа пропадала связь с м/к БУ
  dout[a+11]=ne(cod & 2048, 0)	; Во время анализа зафиксированы рестарты м/к БУ
  dout[a+12]=ne(cod & 4096, 0)	; Во время анализа зафиксированы аварии ДТП
  dout[a+13]=ne(cod & 8192, 0)	; Выход одного из компонентов за технологический допуск
  dout[a+14]=ne(cod & 16384, 0)	; Выход одного из компонентов за аварийный допуск
  dout[a+15]=ne(cod & 32768, 0)	; Флаг ошибок изменен пользователем
endfunc 


; оставляет b - знаков после запятой (округление)
func znak (sys_n,b)
if ge(restdiv(int(sys_n*pow(10,b+1)),10),5)
return(int(sys_n*pow(10,b))/pow(10,b)+pow(0.1,b))
else
return(int(sys_n*pow(10,b))/pow(10,b))
endif
endfunc


; выбор количества знаков после запятой
func vibor_z (sys,param)
if lt(sys,1*param)
  if lt(sys,0.1*param)
  return(4)
  else
  return(3)
  endif
else
return(2)
endif
endfunc


; Перенос значений из области результата запроса в расчетные параметры БД
; i - номер переменной блока расч параметров БД
; k - #sys начала области БД modbus соотв области адресов результ запроса
; число выводимых параметров 40 
; список парам модбас в редакторе структуры базы данных
; д.быть в таком же порядке как в этой базе (ГРС Затон)
; т.к. вычислитель обращается к ним по сис номеру в зависимости от первого параметра
func queryarea2db(i,k)
    a11=vibor_z (#[k+11],0.487)
    a12=vibor_z (#[k+12],0.449)
    a13=vibor_z (#[k+13],0.449)
    a18=vibor_z (#[k+18],0.705)
    aout[i+0]=#[k+0]
    aout[i+1]=#[k+1]
    aout[i+2]=#[k+2]
    aout[i+3]=#[k+3]
    aout[i+4]=#[k+4]
    aout[i+5]=#[k+5]
    aout[i+6]=#[k+6]
    aout[i+7]=#[k+7]
    aout[i+8]=#[k+8]
    aout[i+9]=znak (#[k+9],2)		;метан(2)
    aout[i+10]=znak (#[k+10],2)	;этан(2)
    aout[i+11]=znak (#[k+11],a11)	;пропан(2-3)		vibor_z (#[k+11],0.487)
    aout[i+12]=znak (#[k+12],a12)	;изобутан(3-4)	vibor_z (#[k+12],0.449)
    aout[i+13]=znak (#[k+13],a13)	;н-бутан(3-4)		vibor_z (#[k+13],0.449)
    aout[i+14]=znak (#[k+14],4)	;нео-пентан(4)
    aout[i+15]=znak (#[k+15],4)	;изопентан(4)
    aout[i+16]=znak (#[k+16],4)	;н-пентан(4)
    aout[i+17]=znak (#[k+17],4)	;гексаны(4)
    aout[i+18]=znak (#[k+18],a18)	;азот(2-3)		vibor_z (#[k+18],0.705)
    aout[i+19]=znak (#[k+19],4)	;кислород(4)
    aout[i+20]=znak (#[k+20],3)	;углекислый газ(3)
    aout[i+21]=znak (#[k+21],4)	;гелий(4)?
    aout[i+22]=znak (#[k+22],5)	;водород(5)?
    aout[i+23]=znak (#[k+23],5)	;вода(5)?
    aout[i+24]=znak (#[k+24],4)	;коэф сжимаемости (4)
    aout[i+25]=znak (#[k+25],3)	;молярная масса (3)
    aout[i+26]=znak (#[k+26],2)	;низшая УТС об(2)
    aout[i+27]=znak (#[k+27],2)	;высшая УТС об(2)
    aout[i+28]=znak (#[k+28],2)	;низшая УТС мол(2)
    aout[i+29]=znak (#[k+29],2)	;высшая УТС мол(2)
    aout[i+30]=znak (#[k+30],4)	;абсол плотн(4)
    aout[i+31]=znak (#[k+31],4)	;относ плотн(4)
    aout[i+32]=znak (#[k+32],2)	;число Воббе выс(2)
    aout[i+33]=znak (#[k+33],2)	;число Воббе низ(2)
    aout[i+34]=znak (#[k+34],2)	;низшая УТС мас(2)
    aout[i+35]=znak (#[k+35],2)	;высшая УТС мас(2)
    aout[i+36]=#[k+36]
    aout[i+37]=#[k+37]
    aout[i+38]=#[k+38]
    aout[i+39]=#[k+39]
endfunc


func oninit(t)
  initouts 1,0,16 ; инициализация нулем 16-ти
  dout[20]=0 ; ошибка калибровки обновится в час окончания калибровки
 
  sleep(5*18)
  set {РЕЖ ЗА ХР ЗАТО}[sys_num],1
  prevhour=hour(time()) 

 ; для запроса средних значений за указанную дату
 ; значения по умолчанию
  set {FlagStat ЗАТОН}[sys_num], 1 			; среднесуточные
  set {KodBase ЗАТОН}[sys_num], 0 			; рабочие анализы
  set {MonthBaseЗАТОН}[sys_num], 0
  set {YearBase ЗАТОН}[sys_num], 0
  set {DayBase ЗАТОН}[sys_num], 0
  set {HourBase ЗАТОН}[sys_num], -1
  set {PosBase ЗАТОН}[sys_num], monthday(time()-86400)	; здесь день месяца анализа

  set {КН ЗАПР ЗАТОН}[sys_num],1	; так инициируем внеочеред запрос средних при перезагр
endfunc

; --------------- Вычисление ошибок -----------------------------------------------
x=hr_o(1,{FLAG ERROR ЗАТ})
dout[17]=ne({FLAG ERROR ЗАТ},0)
dout[19]=ne({FLAG1ERROR1ЗАТ},0)


; управление анализом каллибровки (в ручном режиме)
if eq({КН ЗАПР ЗАТОН},1)
  LOCK_ARCH 6,2 ; начать работу с областью адр pgc
  set {РЕЖ ЗА ХР ЗАТО}[sys_num],0 ; отключаем автомат
 z=set_uncond({ФЛАГ ВЫБ ЗАТОН}[sys_num],{FlagStat ЗАТОН})
 z=set_uncond({КОД БАЗЫ ЗАТОН}[sys_num],{KodBase ЗАТОН})
 z=set_uncond({МЕС ВЫБ ЗАТОН}[sys_num],{MonthBaseЗАТОН})
 z=set_uncond({ГОД ВЫБ ЗАТОН}[sys_num],{YearBase ЗАТОН})
 z=set_uncond({ДЕНЬ ВЫБ ЗАТОН}[sys_num],{DayBase ЗАТОН})
 z=set_uncond({ЧАС ВЫБ ЗАТОН}[sys_num],{HourBase ЗАТОН})
 z=set_uncond({ПОЗ АНАЛ ЗАТОН}[sys_num],{PosBase ЗАТОН})
  set {РЕЖ ЗА ХР ЗАТО}[sys_num],1
  set {КН ЗАПР ЗАТОН}[sys_num],0
  sleep(20*18)		  ; ожидание процедуры запроса, опрос идет..
  if(eq({КОД БАЗЫ ЗАТОН},0))		  ; обработка результатов запроса 
    z=queryarea2db(30,{ЧИС АН ВЫБ М}[sys_num])
  endif
  UNLOCK_ARCH 6,2 ; завершить работу с областью адр pgc
endif



; --------------  получение результата калибровки (в режиме автомат) ---------------------
c=monthday(time())  	; текущий день месяца
h=hour(time()) 		; текущий час
if (eq({РЕЖ ЗА ХР ЗАТО},1)&ne(h,prevhour)&eq(h,{ЧАС КАЛ ЗАТОН}));12ч
  LOCK_ARCH 6,2 ; начать работу с областью адр pgc
z=set_uncond({ФЛАГ ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({КОД БАЗЫ ЗАТОН}[sys_num],1)
z=set_uncond({МЕС ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ГОД ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ДЕНЬ ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ЧАС ВЫБ ЗАТОН}[sys_num],-1)
z=set_uncond({ПОЗ АНАЛ ЗАТОН}[sys_num],0)
  sleep(20*18)		  ; ожидание процедуры запроса, опрос идет..
  if(eq({КОД БАЗЫ ЗАТОН},1))		  	; если таблица калибровочная
  dout[20]=ne({FLAG1ERROR2ЗАТ},0) 	; считываем ошибку калибровки
  endif
  UNLOCK_ARCH 6,2 ; завершить работу с областью адр pgc
endif

; --------------  получение средних значений (в режиме автомат) ---------------------
if (eq({РЕЖ ЗА ХР ЗАТО},1)&ne(h,prevhour)&eq(h,{ЧАС АНАЛ ЗАТОН})) ;13ч
  LOCK_ARCH 6,2 ; начать работу с областью адр pgc
z=set_uncond({ФЛАГ ВЫБ ЗАТОН}[sys_num],1)
z=set_uncond({КОД БАЗЫ ЗАТОН}[sys_num],0)
z=set_uncond({МЕС ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ГОД ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ДЕНЬ ВЫБ ЗАТОН}[sys_num],0)
z=set_uncond({ЧАС ВЫБ ЗАТОН}[sys_num],-1)
z=set_uncond({ПОЗ АНАЛ ЗАТОН}[sys_num],c-1)
  sleep(20*18)		  ; ожидание процедуры запроса, опрос идет..
  if(eq({КОД БАЗЫ ЗАТОН},0))		  ; обработка результатов запроса 
    z=queryarea2db(30,{ЧИС АН ВЫБ М}[sys_num])
  endif
  UNLOCK_ARCH 6,2 ; завершить работу с областью адр pgc
endif

  prevhour=h