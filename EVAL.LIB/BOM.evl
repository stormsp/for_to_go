; Библиотека для работы с одоризаторами БОМ 
; #include "eval.lib\BOM.evl"

; vi    - номер свободной выходной переменной для таймеров  Требуется 2 шт. 
; q1    - мгновенный расход газа по прибору учета газа
; qz    - расход газа замещающий, при недостоверных 
;	  	  данных с прибора учета газа (суперфло)
; mode  - режим одоризации 
;	  	  для БОМ:  	0-автоматич от суперфло (посредством реле)
;		    		1-автоматич от САУ (требуется засылка)
;		    		2-ручное задание расхода газа
; cnt_sys - #сист номер расхода газа одоризатора в который засылать
; Т 	- период засылки.
; ПРИМЕР ИСПОЛЬЗОВАНИЯ:
; в ините 
;  aout[16]=getticks(0)
;  aout[17]=getticks(0)
; в тексте
;  x=setq_periodic(16,({МГН РАС-1 ДЮРТ}+{МГН РАС-2 ДЮРТ}),{QМГН ЗАМ ДЮРТ},{РЕЖ ОДОР ДЮРТ},{QГ ОДОР ДЮРТ}[sys_num],30)
; или
;  x=setq_one(({ПР СУТ-1 ДЮРТ}+{ПР СУТ-2 ДЮРТ})/24,{QМГН ЗАМ ДЮРТ},{QГ ОДОР ДЮРТ}[sys_num])


func setq(q,cnt_sys)
  if (dost(#[cnt_sys]))
    if (gt(abs(#[cnt_sys]-q),5))  	; если расход мало изменился не засылаем
      set cnt_sys,q
    endif
  endif
endfunc

func setq_one(q,qz,cnt_sys)
  if dost(q)
    x=setq(q,cnt_sys)
  else
    x=setq(qz,cnt_sys)
  endif
endfunc

func setq_periodic(vi,q1,qz,mode,cnt_sys,T)
  if (ne(mode,2)) ; не автомат расход
	return(0)
  endif

  if (ge(getticks(aout[vi])*ticksize(),T))
    if (dost(q1))
      x=setq(q1,cnt_sys)
    else
      if (valTrack(!dost(q1),60,vi+1)); если расход недост ждем 60 сек потом засылаем замещенный
        x=setq(qz,cnt_sys)
      endif
    endif
    aout[vi]=getticks(0)
  endif
  
  return(0)
endfunc


